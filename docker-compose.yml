
services:
  neo4j:
    image: neo4j:5.14.0
    container_name: graphrag-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_PLUGINS=["graph-data-science"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - graphrag-network
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    container_name: graphrag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - graphrag-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "pgrep", "ollama"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: graphrag-api
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_DATABASE=graphrag
      - OLLAMA_HOST=http://ollama:11434
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ./data:/app/data
    networks:
      - graphrag-network
    depends_on:
      neo4j:
        condition: service_healthy
      ollama:
        condition: service_healthy

  ui:
    build:
      context: .
      dockerfile: docker/Dockerfile.ui
    container_name: graphrag-ui
    ports:
      - "8501:8501"
    environment:
      - API_HOST=api
      - API_PORT=8000
      - UI_PORT=8501
    networks:
      - graphrag-network
    depends_on:
      - api

networks:
  graphrag-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  ollama_data: 
